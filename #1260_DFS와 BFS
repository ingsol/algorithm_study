import sys
from collections import deque

def dfs(graph, v, visited):
    visited[v]=True
    print(v, end=' ')
    for i in graph[v]:
        if not visited[i]:
            dfs(graph,i,visited)
            
def bfs(graph, v, visited):
    queue=deque([v])
    visited[v]=True
    while queue:
        x=queue.popleft()
        print(x, end=' ')
        for i in graph[x]:
            if not visited[i]:
                queue.append(i)
                visited[i]=True
                
def main():
    n, m, v=map(int, input().split())
    graph=[[] for i in range(n+1)]
    for _ in range(m):
        n1, n2=map(int, input().split())
        graph[n1].append(n2)
        graph[n2].append(n1)
    for j in range(n+1):
        graph[j].sort()
    visited=[False]*(n+1)
    dfs(graph,v,visited)
    visited=[False]*(n+1)
    print('')
    bfs(graph,v,visited)
    

if __name__=='__main__':
    main()
